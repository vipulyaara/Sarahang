plugins {
    alias(libs.plugins.android.library)
    alias(libs.plugins.kotlin.android)
    alias(libs.plugins.cacheFixPlugin)
    alias(libs.plugins.kotlin.compose.compiler)
    alias(libs.plugins.kotlin.kapt)
}

android {
    namespace 'com.sarahang.playback.ui'
    compileSdk 35

    defaultConfig {
        minSdk 24

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility = JavaVersion.VERSION_17
        targetCompatibility = JavaVersion.VERSION_17
    }

    kotlin {
        jvmToolchain(17)
    }
}

dependencies {
    implementation project(':core-playback')
    implementation(libs.media)

    implementation(platform(libs.compose.bom))
    implementation(libs.compose.animation.animation)
    implementation(libs.compose.foundation.foundation)
    implementation(libs.compose.foundation.layout)
    implementation(libs.compose.material.material)
    implementation(libs.compose.material.material3)
    implementation(libs.compose.material.iconsext)
    implementation(libs.compose.ui.tooling)
    implementation(libs.compose.ui.ui)
    implementation(libs.compose.ui.util)
    implementation(libs.compose.ui.textfonts)

    implementation(libs.accompanist.placeholder)

    implementation libs.androidx.lifecycle.runtime
    implementation libs.androidx.lifecycle.viewmodel.compose
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.kotlin.serialization

    implementation libs.coil.compose
    implementation libs.javax.inject

    implementation libs.icons.tabler
    implementation libs.icons.feather
    implementation libs.icons.font.awesome

    implementation libs.material.kolor

    implementation libs.timber
    implementation libs.dataStore

    implementation libs.compose.runtime.runtime
}
